import { NextResponse } from "next/server";

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN; 
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID; 

export async function POST(req) {
  try {
    const { name, phone, product } = await req.json();

    if (!name || !phone || !product) {
      return NextResponse.json({ error: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!" }, { status: 400 });
    }

    const message = `üõí *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\nüì¶ *–¢–æ–≤–∞—Ä:* ${product.name}\nüí∞ *–¶–µ–Ω–∞:* ${product.price}\nüë§ *–ò–º—è:* ${name}\nüìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}`;

    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    await fetch(url, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: TELEGRAM_CHAT_ID, text: message, parse_mode: "Markdown" }),
    });

    return NextResponse.json({ message: "–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!" }, { status: 200 });
  } catch (error) {
    return NextResponse.json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" }, { status: 500 });
  }
}
